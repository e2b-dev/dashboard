flowchart TD
subgraph SANDBOX_CONTEXT["Sandbox Context"]
    direction TB
    SANDBOX_PROVIDER["SandboxProvider"]
    SANDBOX_STATE["Runtime State"]

    SANDBOX_PROVIDER -- "tracks lifecycle" --> SANDBOX_STATE
end

%% ---------- New Server-side handling ----------
subgraph SERVER_SIDE["Server Runtime (per Vercel instance)"]
    direction TB
    SANDBOX_POOL["SandboxPool"]
    WATCH_POOL["WatchDirPool"]
    LIST_ROUTE["/list Route"]
    WATCH_ROUTE["/watch Route (SSE)"]

    SANDBOX_POOL -- "1 per sandbox" --> WATCH_POOL
    LIST_ROUTE -- "files.list()" --> SANDBOX_POOL
    WATCH_ROUTE -- "watchDir stream" --> WATCH_POOL
end

subgraph INSPECT_CONTEXT["Inspect Context"]
    direction TB
    INSPECT_PROVIDER["SandboxInspectProvider"]
    FILESYSTEM_STORE["FilesystemStore"]
    EVENT_MANAGER["FilesystemEventManager (root recursive watcher)"]
    OPERATIONS["Operations Object"]

    INSPECT_PROVIDER -- "creates singleton" --> FILESYSTEM_STORE
    INSPECT_PROVIDER -- "creates with store" --> EVENT_MANAGER
    INSPECT_PROVIDER -- "exposes interface" --> OPERATIONS
    EVENT_MANAGER -- "writes FS data" --> FILESYSTEM_STORE
    OPERATIONS -- "delegates to" --> EVENT_MANAGER
    OPERATIONS -- "writes UI flags" --> FILESYSTEM_STORE
end

%% Connections between client and server
EVENT_MANAGER -- "GET /list" --> LIST_ROUTE
EVENT_MANAGER -- "SSE /watch" --> WATCH_ROUTE

subgraph HOOKS["Hook Layer"]
    direction TB
    FILESYSTEM_HOOKS["Filesystem Hooks"]
    DIRECTORY_HOOKS["Directory Hooks"]
    NODE_HOOKS["Node Hooks"]

    FILESYSTEM_HOOKS -- "subscribe to store slices" --> FILESYSTEM_STORE
    DIRECTORY_HOOKS -- "subscribe to store slices" --> FILESYSTEM_STORE
    NODE_HOOKS -- "subscribe to store slices" --> FILESYSTEM_STORE

    FILESYSTEM_HOOKS -- "return operations" --> OPERATIONS
    DIRECTORY_HOOKS -- "return operations" --> OPERATIONS
    NODE_HOOKS -- "return operations" --> OPERATIONS
end

subgraph UI_COMPONENTS["UI Components"]
    direction LR
    FILE_TREE["FileTree"]
    CODE_EDITOR["Code Editor"]
    OTHER_UI["Other Components"]

    FILE_TREE -- "trigger user actions" --> USER_ACTIONS["User Actions"]
    CODE_EDITOR -- "trigger user actions" --> USER_ACTIONS
    OTHER_UI -- "trigger user actions" --> USER_ACTIONS
end

subgraph E2B_REMOTE["E2B Cloud"]
    REMOTE_SANDBOX["Remote Sandbox"]
end

%% External connectivity
REMOTE_SANDBOX -- "SDK REST + unary gRPC" --> SANDBOX_POOL
REMOTE_SANDBOX -- "watchDir server-stream" --> WATCH_POOL

%% Client-Server boundary
SERVER_SIDE -- "HTTP (JSON) / SSE" --> EVENT_MANAGER

%% Data Flow: User Actions
USER_ACTIONS -- "call hooks" --> OPERATIONS
OPERATIONS -- "async list / watch" --> EVENT_MANAGER

%% Flow inside client
FILESYSTEM_STORE -- "triggers re-renders" --> HOOKS
HOOKS -- "provide updated state" --> UI_COMPONENTS

%% Hook Integration
HOOKS -- "consumed by" --> UI_COMPONENTS

%% Styling
classDef contextClass fill:#E3F2FD,stroke:#1976D2,stroke-width:2px
classDef storeClass fill:#E8F5E8,stroke:#388E3C,stroke-width:2px
classDef managerClass fill:#FFF3E0,stroke:#F57C00,stroke-width:2px
classDef hooksClass fill:#FCE4EC,stroke:#C2185B,stroke-width:2px
classDef uiClass fill:#F1F8E9,stroke:#689F38,stroke-width:2px
classDef remoteClass fill:#FFEBEE,stroke:#D32F2F,stroke-width:2px

class SANDBOX_PROVIDER,INSPECT_PROVIDER contextClass
class FILESYSTEM_STORE storeClass
class EVENT_MANAGER,OPERATIONS managerClass
class FILESYSTEM_HOOKS,DIRECTORY_HOOKS,NODE_HOOKS hooksClass
class FILE_TREE,CODE_EDITOR,OTHER_UI,USER_ACTIONS uiClass
class REMOTE_SANDBOX remoteClass